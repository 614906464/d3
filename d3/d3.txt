D3.js 是基于数据操作文档的JavaScript库，通过html、SVG和CSS赋予数据以生命。D3集强力的可视化组件与数据驱动型的DOM操作手法于一身，能最大限度地引出现代浏览器的性能，而不必束缚于特定的框架。


D3 的全称是（Data-Driven Documents），顾名思义可以知道是一个被数据驱动的文档。听名字有点抽象，说简单一点，其实就是一个 JavaScript 的函数库，使用它主要是用来做数据可视化的。如果你不知道什么是 JavaScript ，请先学习一下 JavaScript，推荐阮一峰老师的教程。

在D3中，用于选择元素的函数有两个：
d3.select():是选择所有指定元素的第一个；
d3.selectAll():是选择指定元素的全部。
D3是通过以下两个函数来绑定数据的：
datum():绑定一个数据到选择集上；
data()：绑定一个数组到选择集上，数组的各项值分别与选择集的各元素绑定。
	D3插入元素涉及的函数有两个：
append():在选择集末尾插入元素。
insert():在选择集前面插入元素。

删除用remove();

SVG，指可缩放矢量图形(Scalable Vector Graphics)，是用于描述二维矢量图形的一种图形格式，是由万维网联盟制定的开放标准。SVG使用XML格式来定义图形，除了IE8之前的版本外，绝大部分浏览器都支持SVG，可将SVG文本直接嵌入HTML中显示。

	SVG绘制的是矢量图，因此对图像进行放大也不会失真。
基于XML，可以为每个元素添加JavaScript事件处理器，
每个图形均视为对象，更改对象的属性，图形也会改变。
不适合游戏应用。
	
	CANVAS绘制的是位图，图像放大后会失真。
不支持事件处理器；
能够以.png或.jpg格式保存图像；
适合游戏应用。

	d3.scale.linear()返回一个线性比例尺。domain()和range()分别设定比例尺的定义域和值域。在这里还用到了两个函数，它们经常与比例尺一起出现：
d3.max()
d3.min()

在SVG中画布的预定义元素里，有六种基本图形：
矩形、圆形、椭圆、线段、拆线、多边形
另外，还有一种比较特殊，也是功能最强的元素：
路径
画布中的所有图形，都是由以上七种元素组成。

坐标轴：
d3.svg.axis()：D3中坐标轴的组件，能够在SVG中生成组成坐标轴的元素。
scale()：指定比例尺。
orient()：指定刻度的朝向，bottom表示在坐标轴的下方显示 。
ticks()：指定刻度的数量。

过渡：
transition()：过渡
duration()：指定过渡的持续时间，单位为毫秒；
ease()：过渡的方式；
常有的：
linear：普通的线性变化；
circle：慢慢地到达变换的最终状态；
elastic：带有弹跳的到达最终状态；
bounce：在最终状态处弹跳几次；
	调用时，格式如：ease('bounce')
delay()：指定延迟时间，表示一定时间后才开始转变，单位同样为毫秒。些函数可以对整体指定延迟，也可以对个别指定延迟。

如果数组为[3,6,9,12,15]，将此数组绑定到三个p元素的选择集上。可以想象，会有两个数据没有元素与之对应，这时候D3会建立两个空的元素与数据对应，这一部分就称为Enter。而有元素与数据对应的部分称为Update。如果数组为[3]，则会有两个元素没有数据绑定，那么没有数据绑定的部分被称为Exit。

交互，指的是用户输入了某种指令，程序接受到指令之后必须做出某种响应。对可视化图表来说，交互能使图表更加生动，能表现更多内容。例如，拖动图表中某些图形、鼠标滑到图形上出现提示框、用触屏放大或缩小图形等等。

鼠标常用的事件有：
click---鼠标单击某元素时，相当于mousedown 和mouseup组合在一起。
mouseover ---- 光标放在某元素上；
mouseout----光标从某元素上移出来时；
mousemove----鼠标按钮被按下；
mouseup-----鼠标按钮被松开。


keydown----当用户按下任意键时触发，按住不放会重复触发此事件。此事件不会区分字母的大小写；
keypress----当用户按下字符键（大小写字母、数字、加号、等号、回画等）时触发，按住不放会重复此事件，该事件区分字母的大小写。
keyup-------当用户释放键时触发，不区分字母的大小写；


触屏常用的事件有三个：
touchstart---------当触摸点被放在触摸屏上时；
touchmove--------当触摸点在触摸屏上移动时；
touchend------当触摸点从触摸屏上拿开时。